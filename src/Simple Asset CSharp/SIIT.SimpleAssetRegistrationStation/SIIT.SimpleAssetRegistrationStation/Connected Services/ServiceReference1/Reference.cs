//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIIT.SimpleAssetRegistrationStation.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/Asset")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ColumnBasic", Namespace="http://schemas.datacontract.org/2004/07/Asset")]
    [System.SerializableAttribute()]
    public partial class ColumnBasic : SIIT.SimpleAssetRegistrationStation.ServiceReference1.BasicLineColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> categoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<decimal> dataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> categories {
            get {
                return this.categoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.categoriesField, value) != true)) {
                    this.categoriesField = value;
                    this.RaisePropertyChanged("categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<decimal> data {
            get {
                return this.dataField;
            }
            set {
                if ((object.ReferenceEquals(this.dataField, value) != true)) {
                    this.dataField = value;
                    this.RaisePropertyChanged("data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicLineColumn", Namespace="http://schemas.datacontract.org/2004/07/Asset")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SIIT.SimpleAssetRegistrationStation.ServiceReference1.ColumnBasic))]
    public partial class BasicLineColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChartSubtitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChartTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XAxisTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YAxisTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChartSubtitle {
            get {
                return this.ChartSubtitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ChartSubtitleField, value) != true)) {
                    this.ChartSubtitleField = value;
                    this.RaisePropertyChanged("ChartSubtitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChartTitle {
            get {
                return this.ChartTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ChartTitleField, value) != true)) {
                    this.ChartTitleField = value;
                    this.RaisePropertyChanged("ChartTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChartType {
            get {
                return this.ChartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChartTypeField, value) != true)) {
                    this.ChartTypeField = value;
                    this.RaisePropertyChanged("ChartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XAxisTitle {
            get {
                return this.XAxisTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.XAxisTitleField, value) != true)) {
                    this.XAxisTitleField = value;
                    this.RaisePropertyChanged("XAxisTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YAxisTitle {
            get {
                return this.YAxisTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.YAxisTitleField, value) != true)) {
                    this.YAxisTitleField = value;
                    this.RaisePropertyChanged("YAxisTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultModelType", Namespace="http://schemas.datacontract.org/2004/07/Asset")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SIIT.SimpleAssetRegistrationStation.ServiceReference1.CompositeType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<SIIT.SimpleAssetRegistrationStation.ServiceReference1.ColumnBasic>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SIIT.SimpleAssetRegistrationStation.ServiceReference1.ColumnBasic))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SIIT.SimpleAssetRegistrationStation.ServiceReference1.BasicLineColumn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<decimal>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
    public partial class ResultModelType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<object> DataObjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataSet DataSetResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> DataTextsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<object> DataObjects {
            get {
                return this.DataObjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataObjectsField, value) != true)) {
                    this.DataObjectsField = value;
                    this.RaisePropertyChanged("DataObjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataSet DataSetResult {
            get {
                return this.DataSetResultField;
            }
            set {
                if ((object.ReferenceEquals(this.DataSetResultField, value) != true)) {
                    this.DataSetResultField = value;
                    this.RaisePropertyChanged("DataSetResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> DataTexts {
            get {
                return this.DataTextsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTextsField, value) != true)) {
                    this.DataTextsField = value;
                    this.RaisePropertyChanged("DataTexts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Flag {
            get {
                return this.FlagField;
            }
            set {
                if ((this.FlagField.Equals(value) != true)) {
                    this.FlagField = value;
                    this.RaisePropertyChanged("Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowCount {
            get {
                return this.RowCountField;
            }
            set {
                if ((this.RowCountField.Equals(value) != true)) {
                    this.RowCountField = value;
                    this.RaisePropertyChanged("RowCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAssetService")]
    public interface IAssetService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/GetData", ReplyAction="http://tempuri.org/IAssetService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/GetData", ReplyAction="http://tempuri.org/IAssetService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAssetService/GetDataUsingDataContractResponse")]
        SIIT.SimpleAssetRegistrationStation.ServiceReference1.CompositeType GetDataUsingDataContract(SIIT.SimpleAssetRegistrationStation.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAssetService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<SIIT.SimpleAssetRegistrationStation.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(SIIT.SimpleAssetRegistrationStation.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/MorningCheck", ReplyAction="http://tempuri.org/IAssetService/MorningCheckResponse")]
        string MorningCheck();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/MorningCheck", ReplyAction="http://tempuri.org/IAssetService/MorningCheckResponse")]
        System.Threading.Tasks.Task<string> MorningCheckAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/TestList", ReplyAction="http://tempuri.org/IAssetService/TestListResponse")]
        System.Collections.Generic.List<SIIT.SimpleAssetRegistrationStation.ServiceReference1.ColumnBasic> TestList(string arg1, string arg2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/TestList", ReplyAction="http://tempuri.org/IAssetService/TestListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SIIT.SimpleAssetRegistrationStation.ServiceReference1.ColumnBasic>> TestListAsync(string arg1, string arg2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/SearchByTid", ReplyAction="http://tempuri.org/IAssetService/SearchByTidResponse")]
        SIIT.SimpleAssetRegistrationStation.ServiceReference1.ResultModelType SearchByTid(string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/SearchByTid", ReplyAction="http://tempuri.org/IAssetService/SearchByTidResponse")]
        System.Threading.Tasks.Task<SIIT.SimpleAssetRegistrationStation.ServiceReference1.ResultModelType> SearchByTidAsync(string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/SearchByFid", ReplyAction="http://tempuri.org/IAssetService/SearchByFidResponse")]
        SIIT.SimpleAssetRegistrationStation.ServiceReference1.ResultModelType SearchByFid(string fid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/SearchByFid", ReplyAction="http://tempuri.org/IAssetService/SearchByFidResponse")]
        System.Threading.Tasks.Task<SIIT.SimpleAssetRegistrationStation.ServiceReference1.ResultModelType> SearchByFidAsync(string fid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/Save", ReplyAction="http://tempuri.org/IAssetService/SaveResponse")]
        SIIT.SimpleAssetRegistrationStation.ServiceReference1.ResultModelType Save(string RoomCode, string Epc, string Tid, string Fid, string AssetLabel, string AssetType, string AssetDescription, string SystemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssetService/Save", ReplyAction="http://tempuri.org/IAssetService/SaveResponse")]
        System.Threading.Tasks.Task<SIIT.SimpleAssetRegistrationStation.ServiceReference1.ResultModelType> SaveAsync(string RoomCode, string Epc, string Tid, string Fid, string AssetLabel, string AssetType, string AssetDescription, string SystemId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAssetServiceChannel : SIIT.SimpleAssetRegistrationStation.ServiceReference1.IAssetService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AssetServiceClient : System.ServiceModel.ClientBase<SIIT.SimpleAssetRegistrationStation.ServiceReference1.IAssetService>, SIIT.SimpleAssetRegistrationStation.ServiceReference1.IAssetService {
        
        public AssetServiceClient() {
        }
        
        public AssetServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AssetServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssetServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssetServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public SIIT.SimpleAssetRegistrationStation.ServiceReference1.CompositeType GetDataUsingDataContract(SIIT.SimpleAssetRegistrationStation.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<SIIT.SimpleAssetRegistrationStation.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(SIIT.SimpleAssetRegistrationStation.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public string MorningCheck() {
            return base.Channel.MorningCheck();
        }
        
        public System.Threading.Tasks.Task<string> MorningCheckAsync() {
            return base.Channel.MorningCheckAsync();
        }
        
        public System.Collections.Generic.List<SIIT.SimpleAssetRegistrationStation.ServiceReference1.ColumnBasic> TestList(string arg1, string arg2) {
            return base.Channel.TestList(arg1, arg2);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SIIT.SimpleAssetRegistrationStation.ServiceReference1.ColumnBasic>> TestListAsync(string arg1, string arg2) {
            return base.Channel.TestListAsync(arg1, arg2);
        }
        
        public SIIT.SimpleAssetRegistrationStation.ServiceReference1.ResultModelType SearchByTid(string tid) {
            return base.Channel.SearchByTid(tid);
        }
        
        public System.Threading.Tasks.Task<SIIT.SimpleAssetRegistrationStation.ServiceReference1.ResultModelType> SearchByTidAsync(string tid) {
            return base.Channel.SearchByTidAsync(tid);
        }
        
        public SIIT.SimpleAssetRegistrationStation.ServiceReference1.ResultModelType SearchByFid(string fid) {
            return base.Channel.SearchByFid(fid);
        }
        
        public System.Threading.Tasks.Task<SIIT.SimpleAssetRegistrationStation.ServiceReference1.ResultModelType> SearchByFidAsync(string fid) {
            return base.Channel.SearchByFidAsync(fid);
        }
        
        public SIIT.SimpleAssetRegistrationStation.ServiceReference1.ResultModelType Save(string RoomCode, string Epc, string Tid, string Fid, string AssetLabel, string AssetType, string AssetDescription, string SystemId) {
            return base.Channel.Save(RoomCode, Epc, Tid, Fid, AssetLabel, AssetType, AssetDescription, SystemId);
        }
        
        public System.Threading.Tasks.Task<SIIT.SimpleAssetRegistrationStation.ServiceReference1.ResultModelType> SaveAsync(string RoomCode, string Epc, string Tid, string Fid, string AssetLabel, string AssetType, string AssetDescription, string SystemId) {
            return base.Channel.SaveAsync(RoomCode, Epc, Tid, Fid, AssetLabel, AssetType, AssetDescription, SystemId);
        }
    }
}
